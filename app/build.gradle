apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 24
    buildToolsVersion "$build_tools_version"
    defaultConfig {
        applicationId 'com.proxerme.app'
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 23
        versionName "0.6.0-beta"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "PROXER_API_KEY", "\"" + getProxerApiKey() + "\""
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:support-v4:$support_version"
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:recyclerview-v7:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.android.support:design:$support_version"
    compile "com.android.support:customtabs:$support_version"
    compile "com.android.support:percent:$support_version"
    compile "com.android.support:support-annotations:$support_version"
    compile "com.android.support:preference-v14:$support_version"
    compile "com.android.support:preference-v7:$support_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // TODO: Update when bugfix is out. Until then use the custom compiled ones in /libs
    // compile "org.jetbrains.anko:anko-common:$anko_version"
    // compile "org.jetbrains.anko:anko-sqlite:$anko_version"

    compile 'com.takisoft.fix:preference-v7:24.2.1.0'

    compile('com.mikepenz:aboutlibraries:5.8.1@aar') {
        transitive = true
    }
    compile('com.mikepenz:materialdrawer:5.6.0@aar') {
        transitive = true
    }
    compile 'com.mikepenz:iconics-core:2.8.1@aar'
    compile 'com.mikepenz:community-material-typeface:1.5.54.2@aar'

    compile 'net.danlew:android.joda:2.9.4.1'

    // TODO: Remove when hawk update is out
    compile 'com.facebook.conceal:conceal:1.1.3'
    compile 'com.orhanobut:hawk:2.0.0-Alpha'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    compile 'org.greenrobot:eventbus:3.0.0'

    compile 'de.hdodenhof:circleimageview:2.1.0'

    compile 'com.afollestad.material-dialogs:core:0.9.0.2'

    compile 'org.apmem.tools:layouts:1.10@aar'

    compile 'com.klinkerapps:link_builder:1.3.2'

    compile 'com.github.nekocode:Badge:1.6.2'

    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'

    compile 'com.github.proxer:ProxerLibAndroid:97e7f98af9'
    compile 'com.github.rubengees:EasyHeaderFooterAdapter:1.0.2@aar'
    compile('com.github.rubengees:introduction:1.3.5@aar') {
        transitive = true
    }

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4'

    androidTestCompile "com.android.support:support-annotations:$support_version"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
}

def getProxerApiKey() {
    def Properties props = new Properties()

    try {
        props.load(new FileInputStream(new File('secrets.properties')))
    } catch (Exception exception) {
        try {
            if (System.getenv('CI').toBoolean()) {
                props.load(new FileInputStream(new File('secrets-ci.properties')))
            }
        } catch (Exception innerException) {
            throw new GradleException('Please add a secrets.properties file with your API key.')
        }
    }

    return props['PROXER_API_KEY']
}
